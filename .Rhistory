p + geom_point()
p<-ggplot(training, aes(index, CompressiveStrength, color=Superplasticizer))
p + geom_point()
p<-ggplot(training, aes(index, CompressiveStrength, color=CoarseAggregate))
p + geom_point()
p<-ggplot(training, aes(index, CompressiveStrength, color=FineAggregate))
p + geom_point()
p<-ggplot(training, aes(index, CompressiveStrength, color=Age))
p + geom_point()
histogram(training$SuperPlasticizer)
histogram(training$Superplasticizer)
histogram(log(training$Superplasticizer))
min(log(training$Superplasticizer))
table(log(training$Superplasticizer))
set.seed(3433)
library(AppliedPredictiveModeling)
data(AlzheimerDisease)
adData = data.frame(diagnosis,predictors)
inTrain = createDataPartition(adData$diagnosis, p = 3/4)[[1]]
training = adData[ inTrain,]
testing = adData[-inTrain,]
names(training)
?preProcess
preProcess(training[,58:69], method='pca')
preProcess(training[,58:69], method='pca', thresh=.9)
?adData
pca.vars <- preProcess(training[,58:69], method='pca', thresh=.9)
nopca.vars <- training[,58:69]
head(training)
head(pca.vars)
pca.vars <- preProcess(training[,58:69], method='pca', thresh=.8)
head(pca.vars)
?train
pca.vars
pca.vars[1]
pca.vars[2]
pca.vars[3]
pca.vars[4]
pca.vars[5:10]
pca.vars[10:20]
pca.vars <- pca.vars$rotation
head(pca.vars)
pca.vars
pca.vars <- train(diagnosis ~ ., method='glm', preProcess="pca", pcaComp=7, data = training[,58:69])
dim(diagnosis)
length(diagnosis)
pca.vars <- train(diagnosis[1:251] ~ ., method='glm', preProcess="pca", pcaComp=7, data = training[,58:69])
install.packages('e1071')
pca.vars <- train(diagnosis[1:251] ~ ., method='glm', preProcess="pca", pcaComp=7, data = training[,58:69])
warnings()
?preProcess
trainControl(method='pca', PCAthresh = .8)
a <- trainControl(method='pca', PCAthresh = .8)
pca.vars <- preProcess(training[,58:69], method='pca', thresh=.8)
pca.training <- predict(pca.vars, training)
1000*1.1565
1156.5*1.1565
a<-1156.5*1.1565
a<-a*1.1565
a<-a*1.1565
a<-a*1.1565
a<-1000
for(i < 30){}
while(i < 30){
a<-a*1.1565
i<-i+1
}
i=1
while(i < 30){
a<-a*1.1565
i<-i+1
}
a
a<-1000
while(i < 30){
a<-a*1.1
i<-i+1
}
a
i<-1
while(i < 30){
a<-a*1.1
i<-i+1
}
a
breach <- read.csv('breachmeans.csv')
setwd("/Volumes/triddle/Teaching/Grad stats sem")
getwd()
setwd('~')
getwd()
breach <- read.csv('breachmeans.csv')
setwd("/Volumes/triddle/Teaching/Grad stats sem")
breach <- read.csv('breachmeans.csv')
names(breach)
summary(breach)
head(breach)
breach$happy <- rep(c('yes', 'no'), each=10)
summary(breach)
head(breach)
breach$happy<-factor(breach$happy)
summary(breach)
str(breach)
?str
table(subj)
table(breach$subj)
hist(locomotion1)
hist(breach$locomotion1)
hist(breach$locomotion2)
hist(breach$difflocomotion)
?data.frame
type(breach$subj)
str(breach$subj)
?factor
?char
?character
head(breach)
?numeric
breach$happy <- rep(c("yes", "no") each=10)
breach$happy <- rep(c("yes", "no"), each=10)
head(breach)
str(breach$happy)
breach$happy <- as.factor(breach$happy)
str(breach$happy)
breach$happy
summary(breach$happy)
breach$happy <- rep(c("yes", "no"), each=10)
breach$happy #there's only 20 observations, so we can just print out all of them.
str(breach$happy)
summary(breach$happy)
breach$happy <- as.factor(breach$happy)
breach$happy #there's only twenty observations, so we can just print out the whole lot of them
summary(breach$happy)
library(ggplot2)
plot <- ggplot(breach, aes(x=locomotion1))
plot + geom_histogram()
plot <- ggplot(breach, aes(x=locomotion2))
plot + geom_histogram()
plot <- ggplot(breach, aes(x=locomotion))
plot
print(plot)
plot + geom_line()
plot <- ggplot(breach, aes(x=locomotion1))
plot + geom_line()
plot + geom_point()
plot + geom_area()
plot + geom_bin2d()
plot + geom_dotplot()
plot + geom_freqpoly()
plot + geom_quantile()
plot + geom_rug()
plot + geom_density()
plot <- ggplot(breach, aes(x=c(locomotion1, locomotion2)))
plot + geom_density()
?c
install.packages("reshape2")
install.packages("reshape2")
install.packages("reshape2")
install.packages("reshape2")
plot <- ggplot(breach, aes(x=c(locomotion1, locomotion2)))
library(ggplot2)
plot <- ggplot(breach, aes(x=c(locomotion1, locomotion2)))
plot + geom_histogram()
plot <- ggplot(breach, aes(x=c(locomotion1, locomotion2)))
plot + geom_histogram()
```{r, warning=FALSE, message=FALSEd}
plot <- ggplot(breach, aes(x=c(locomotion1, locomotion2)))
plot + geom_histogram()
```
plot <- ggplot(breach, aes(x=c(locomotion1, locomotion2)))
plot + geom_histogram()
?melt
library(reshape2)
?melt
names(breach)
breach$locomotion1 - breach$locomotion2
difflocomotion
breach$difflocomotion
melt(breach,
id.vars = c('subj', 'flourishing', 'swls', 'age', 'exp', 'apride',
'lpride', 'eom', 'rankindiv', 'rank21', 'averank'),
measure.vars = c('locomotion1', 'locomotion2', 'assessment1', 'assessment2',
'promotion1', 'promotion2', 'prevention1', 'prevention2',
'stress1', 'stress2', 'lie2', 'lie1', 'LxA1', 'LxA2', ))
melt(breach,
id.vars = c('subj', 'flourishing', 'swls', 'age', 'exp', 'apride',
'lpride', 'eom', 'rankindiv', 'rank21', 'averank'),
measure.vars = c('locomotion1', 'locomotion2', 'assessment1', 'assessment2',
'promotion1', 'promotion2', 'prevention1', 'prevention2',
'stress1', 'stress2', 'lie2', 'lie1', 'LxA1', 'LxA2'))
breach <- melt(breach,
id.vars = c('subj', 'flourishing', 'swls', 'age', 'exp', 'apride',
'lpride', 'eom', 'rankindiv', 'rank21', 'averank'),
measure.vars = c('locomotion1', 'locomotion2', 'assessment1', 'assessment2',
'promotion1', 'promotion2', 'prevention1', 'prevention2',
'stress1', 'stress2', 'lie2', 'lie1', 'LxA1', 'LxA2'))
str(breach)
summary(breach)
280/20
breach[breach$subject == 2]
breach[breach$subj == 2]
breach[breach$subj == 2,]
625*2
*2
1250*2
2500-1474
1507-625
882-100
acct.balance <- 782
to.be.reimbursed <- 90+167+188+170
994-615
remaining.cc.balance <- 994-to.be.reimbursed
acct.balance-400
install.packages('XML')
install.packages('tm')
library(XML)
library(tm)
?
d
update
?sd
sd(1:2)
1:2
.5^2
sum(.25, .25)
1+2
/2
3/2
1-.5
2-.5
1-1.5
2-1.5
.5*.5
sqrt(.25)
sqrt(.5)
?samp
?sample
library(Lahman)
df.bat <- with(Batting, data.frame(playerID=playerID,
teamID=teamID,
yearID=yearID,
R=R
))
library(ggplot2)
library(plyr)
library(Lahman)
df.mast <- with(Master, data.frame(playerID=playerID, birth=birthYear))
df<-join(Batting, df.mast)
df$age <- df$yearID - df$birth
ggplot(df, aes(x=age, y=stint)) +
stat_summary(fun.y=mean, geom='line', color='#144256', size=1.5) +
theme_bw() + xlab('Age') + ylab('Teams Played for')
head(mast)
head(df.mast)
head(df)
df <- subset(df, df$G>=145)
ggplot(df, aes(x=R)) +
geom_histogram(binwidth=1, fill="#144256") +
ylab('Count') + xlab('Runs') +
theme_bw()
str(df$yearID)
ggplot(df, aes(y=R, x=yearID)) +
geom_point(alpha=.5, color="#144256") +
stat_smooth(method=lm, color=''#88301B')
ylab('Runs') + xlab('Year') +
theme_bw()
ggplot(df, aes(y=R, x=yearID)) +
geom_point(alpha=.5, color="#144256") +
stat_smooth(method=lm, color=''#88301B') +
ylab('Runs') + xlab('Year') +
theme_bw()
ggplot(df, aes(y=R, x=yearID)) +
geom_point(alpha=.5, color="#144256") +
stat_smooth(method=lm, color=''#88301B') +
ylab('Runs') + xlab('Year') +
ggplot(df, aes(y=R, x=yearID)) +
geom_point(alpha=.5, color="#144256") +
stat_smooth(method=lm, color='#88301B') +
ylab('Runs') + xlab('Year') +
theme_bw()
ggplot(df, aes(y=R, x=yearID)) +
geom_point(alpha=.5, color="#144256") +
ylab('Runs') + xlab('Year') +
theme_bw()
ggplot(df, aes(y=R, x=yearID)) +
geom_point(alpha=.5, color="#144256") +
stat_smooth(method='loess', color = '#88301B')
ylab('Runs') + xlab('Year') +
theme_bw()
ggplot(df, aes(y=R, x=yearID)) +
geom_point(alpha=.5, color="#144256") +
stat_smooth(method='loess', color = '#88301B') +
ylab('Runs') + xlab('Year') +
theme_bw()
head(df)
ggplot(df, aes(y=R, x=age)) +
geom_point(alpha=.5, color="#144256") +
stat_smooth(method='loess', color = '#88301B') +
ylab('Runs') + xlab('Year') +
theme_bw()
grep('gwynn*+', df$playerID)
grep('gwynn.+', df$playerID)
df[2351:2356,]
df[2351:2357,]
df[2350:2357,]
ggplot(df, aes(y=R, x=age)) +
geom_point(alpha=.5, color="#144256") +
stat_smooth(method='loess', color='#88301B') +
geom_line(df[2351:3256], color='#88691B')
ylab('Runs') + xlab('Year') +
theme_bw()
ggplot(df, aes(y=R, x=age)) +
geom_point(alpha=.5, color="#144256") +
stat_smooth(method='loess', color='#88301B') +
geom_line(df[2351:3256,], color='#88691B')
ylab('Runs') + xlab('Year') +
theme_bw()
ggplot(df, aes(y=R, x=age)) +
geom_point(alpha=.5, color="#144256") +
stat_smooth(method='loess', color='#88301B') +
geom_line(df[2351:3256,], aes(y=R, x=age), color='#88691B')
ylab('Runs') + xlab('Year') +
theme_bw()
ggplot(df, aes(y=R, x=age)) +
geom_point(alpha=.5, color="#144256") +
stat_smooth(method='loess', color='#88301B') +
geom_line(df[2351:2356,], aes(y=R, x=age), color='#88691B')
ylab('Runs') + xlab('Year') +
theme_bw()
ggplot(df, aes(y=R, x=age)) +
geom_point(alpha=.5, color="#144256") +
stat_smooth(method='loess', color='#88301B') +
geom_line(df[2351:2356,], aes(y=R, x=age), color='#88691B')
ggplot(df, aes(y=R, x=age)) +
geom_point(alpha=.5, color="#144256") +
stat_smooth(method='loess', color='#88301B') +
geom_line(df[2351:2356,], aes(y=R, x=age), color='#88691B') +
ylab('Runs') + xlab('Year') +
theme_bw()
ggplot(df, aes(y=R, x=age)) +
geom_point(alpha=.5, color="#144256") +
stat_smooth(method='loess', color='#88301B') +
geom_line(df[which(grep('gwynn.+', df$playerID),], aes(y=R, x=age),
color='#88691B') +
ylab('Runs') + xlab('Year') +
theme_bw()
ggplot(df, aes(y=R, x=age)) +
geom_point(alpha=.5, color="#144256") +
stat_smooth(method='loess', color='#88301B') +
geom_line(df[which(grep('gwynn.+', df$playerID)),], aes(y=R, x=age),
color='#88691B') +
ylab('Runs') + xlab('Year') +
theme_bw()
?grep
ggplot(df, aes(y=R, x=age)) +
geom_point(alpha=.5, color="#144256") +
stat_smooth(method='loess', color='#88301B') +
geom_line(df[which(grepl('gwynn.+', df$playerID)),], aes(y=R, x=age),
color='#88691B') +
ylab('Runs') + xlab('Year') +
theme_bw()
ggplot(df, aes(y=R, x=age)) +
geom_point(alpha=.5, color="#144256") +
stat_smooth(method='loess', color='#88301B') +
geom_line(data=df[which(grepl('gwynn.+', df$playerID)),], aes(y=R, x=age),
color='#88691B') +
ylab('Runs') + xlab('Year') +
theme_bw()
grep('henderson.+', df$playerID)
grep('henders.+', df$playerID)
grep('hende.+', df$playerID)
df[2499,]
grep('hender.+', df$playerID)
df[2504,]
df[2504:2509,]
6+8+9
6+7+9+6
grep('gwynn.+, df$playerID)
sdf
''
)
sdfl;
sa
'
grep('gwynn.+', df$playerID)
df[2351:2356,]
df[which(grepl('gwynn.+', df$playerID)),]
df$BA <- df$H/df$AB
df$OBP <- (df$H + df$BB + df$HBP)/(df$AB + df$BB + df$HBP + df$SF)
df$SLG <- (df$H-(df$X2B+df$X3B+df$HR) + (2*df$X2B) + (3*df$x3B) + (4*df$HR))/df$AB
df$X2B+df$X3B+df$HR
df$H-(df$X2B+df$X3B+df$HR)
head(df)
df$SLG <- (df$H-(df$X2B+df$X3B+df$HR) + (2*df$X2B) + (3*df$x3B) + (4*df$HR))/df$AB
df$SLG <- (df$H-(df$X2B+df$X3B+df$HR) + (2*df$X2B) + (3*df$X3B) + (4*df$HR))/df$AB
df[which(grepl('gwynn.+', df$playerID)),]
df$RPG <- df$R/df$G
head(df)
ggplot(df, aes(y=RPG, x=age)) +
geom_point(alpha=.5, color="#144256") +
stat_smooth(method='loess', color = '#88301B') +
ylab('Runs') + xlab('Year') +
theme_bw()
df<-join(Batting, df.mast)
df$age <- df$yearID - df$birth
df$BA <- df$H/df$AB
df$OBP <- (df$H + df$BB + df$HBP)/(df$AB + df$BB + df$HBP + df$SF)
df$SLG <- (df$H-(df$X2B+df$X3B+df$HR) + (2*df$X2B) + (3*df$X3B) + (4*df$HR))/df$AB
df$RPG <- df$R/df$G
ggplot(df, aes(y=RPG, x=age)) +
geom_point(alpha=.5, color="#144256") +
stat_smooth(method='loess', color = '#88301B') +
ylab('Runs') + xlab('Year') +
theme_bw()
ibrary(ggplot2)
library(plyr)
library(Lahman)
df.mast <- with(Master, data.frame(playerID=playerID, birth=birthYear))
df<-join(Batting, df.mast)
df$age <- df$yearID - df$birth
df <- subset(df, df$G>=145)
library(ggplot2)
head(df)
lm(G~AB+lgID)
lm(G~AB+lgID, data=df)
a<-lm(G~AB+lgID, data=df)
a
summary(a)
a$contrasts
srp <- read.csv('Data/SR.Past.Rel.12.10.14.csv')
srp <- read.csv('../Data/SR.Past.Rel.12.10.14.csv')
setwd("~/Documents/gits/StatsWorkshop")
srp <- read.csv('Data/SR.Past.Rel.12.10.14.csv')
#### EXCLUSIONS ####
#exclude 5 who copied the Michael text verbatim (exclcopied=1)
srp <- srp[ which(is.na(srp$exclcopied) == TRUE ), ]
#exclude 11 who used 'Michael' in their message (didn't follow directions) (exclmich=1)
srp <- srp[ which(is.na(srp$exclmich) == TRUE ), ]
####### COMPUTING VARIABLES ##########
attach(srp)
## rmq
srp$loc <- (rmq_1 + rmq_3 + rmq_4 + rmq_5 + rmq_8 + rmq_16 + rmq_21 +
rmq_25 + rmq_28 + rmq_29 + (7-rmq_13) + (7-rmq_24))/12
srp$ass <- ((7-rmq_2) + rmq_6 + rmq_7 + rmq_9 + (7-rmq_10) + rmq_11 +
rmq_15 + rmq_19 + rmq_20 + rmq_22 + (7-rmq_27) + rmq_30)/12
srp$locomassess = srp$loc-srp$ass
srp$prom = (6-rfq_1) + rfq_3 + rfq_7 + (6-rfq_9) + rfq_10 + (6-rfq_11)
srp$prev = (6-rfq_2) + (6-rfq_4) + rfq_5 + (6-rfq_6) + (6-rfq_8)
srp$prommprev = srp$prom-srp$prev
# closeness measure
srp$closeness <- (((8-close_1) + (8-close_2) + close_3 + close_4 +
(8-close_5) + (8-close_6) + close_7 + close_8)/8)
# ntoBelong
srp$belong = ((6-NTB_1) + (6-NTB_3) + (6-NTB_7) + NTB_2 + NTB_4 +
NTB_5 + NTB_6 + NTB_8 + NTB_9 + NTB_10)/10
# Relational Trust
srp$reltrust = (reltrust_1 + reltrust_2 + reltrust_3 + reltrust_4)/4
# Epistemic Trust
srp$epistrust = (epistrust_1 + epistrust_2 + epistrust_3 + epistrust_4)/4
# message trust
srp$messtrust = (messtrust_1 + messtrust_2 + messtrust_3 + messtrust_4)/4
# ECR
srp$anx = (ECR.S_2 + ECR.S_4 + ECR.S_6 + (8-ECR.S_8) + ECR.S_10 + ECR.S_12)
srp$avoid = ((8-ECR.S_1) + ECR.S_3 + (8-ECR.S_5) + ECR.S_7 + ECR.S_9 + ECR.S_11)
#SCS
srp$independence = (((8-SCS_1) + (8-SCS_2) + (8-SCS_3) + (8-SCS_4) +
(8-SCS_5) + (8-SCS_6) + (8-SCS_7) + (8-SCS_8) +
(8-SCS_9) + (8-SCS_10) + (8-SCS_11) + (8-SCS_12) +
SCS_13 + SCS_14 + SCS_15 + SCS_16 + SCS_17 + SCS_18 +
SCS_19 + SCS_20 + SCS_21 + SCS_22 + SCS_23 + SCS_24)/24)
detach(srp)
#F-Scale
srp$authority = (((srp$F.Scale_1) + (srp$F.Scale_2) + (srp$F.Scale_3) +
(srp$F.Scale_4) + (srp$F.Scale_5) + (srp$F.Scale_6) +
(srp$F.Scale_7) + (srp$F.Scale_8) + (srp$F.Scale_9) +
(srp$F.Scale_10) + (srp$F.Scale_11) + (srp$F.Scale_12) +
srp$F.Scale_13 + srp$F.Scale_14 + srp$F.Scale_15 +
srp$F.Scale_16 + srp$F.Scale_17 + srp$F.Scale_18 +
srp$F.Scale_19 + srp$F.Scale_20 + srp$F.Scale_21 +
srp$F.Scale_22)/22)
#### RECODING ####
####renaming manipulations
#install.packages("reshape")
library(reshape)
library(reshape)
srp <- rename(srp, c(DO.BR.FL_19="relprime")) #dissolved=1, stable=2
srp <- rename(srp, c(DO.BR.FL_20="attitude")) #like=2, dislike=1
srp$relprimedum[srp$relprime == "Stable Relationship Priming"] <- 0
srp$relprimedum[srp$relprime == "Dissolved Relationship Priming"] <- 1
srp$attitudedum[srp$attitude == "Michael-Dislike"] <- 0
srp$attitudedum[srp$attitude == "Michael-Like"] <- 1
srp$relprimedum[srp$relprime == "Stable Relationship Priming"] <- 0
srp$relprimedum[srp$relprime == "Dissolved Relationship Priming"] <- 1
srp$relprimedum[srp$relprime == "Stable Relationship Priming"] <- 0
srp$relprimedum[srp$relprime == "Dissolved Relationship Priming"] <- 1
srp$relprimedum[srp$relprime == "Stable Relationship Priming"] <- 0
srp$relprimedum[srp$relprime == "Dissolved Relationship Priming"] <- 1
getOption('contrasts')
with(srp, contrasts(attitude))
with(srp, contrasts(relprime))
names(srp)
srp$prom
a<-lm(prom~relprime*loc)
a<-lm(prom~relprime*loc, data=srp)
a
summary(a)
options(contrasts=c('contr.sum', 'contr.poly'))
a<-lm(prom~relprime*loc, data=srp)
summary(a)
a<-aov(prom~relprime*loc, data=srp)
summary(a)
a<-aov(prom~relprime*loc, data=srp, type=2)
a<-aov(prom~relprime*loc, data=srp, type=1)
