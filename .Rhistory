df.agg <- merge(df.agg, df.agg2, by.x=c('value', 'stereotyped'), by.y=c('value', 'stereotyped'), all=T)
df.agg[is.na(df.agg)] <- 0
df.agg$group <- c(rep('no', 2), rep('yes', 4), rep('no', 2), rep('yes', 2), rep('no', 4), rep('yes', 6), rep('no', 4))
df.agg
plotc <- ggplot(df.agg[df.agg$group == 'yes',], aes(x=factor(value), y=group.x, fill=stereotyped)) +
geom_bar(stat='identity', position=position_dodge()) +
coord_flip() +
scale_fill_manual(values=c('#144256', '#ABC3CE'), name="Identity") +
theme_bw() +
xlab('Value') + scale_y_continuous(breaks=seq(0,12, 2)) +
labs(title = "Group Affirmation")+
theme(legend.text=element_text(size=10),
legend.title = element_text(size=10),
plot.title=element_text(size=10, face='bold'),
axis.title.y=element_blank(),
axis.text.y=element_text(size=10),
axis.title.x=element_text(face='bold', size=12),
axis.text.x=element_text(size=10))
plotc
levels(df.agg$value)
df.agg$value <- factor(df.agg$value, levels=c('athletic ability', 'athletic team', 'church group', 'religious values'
'fraternal group', 'friends and family', 'music and art',
'musical or choir group', 'creativity', 'online community/club',
'sense of humor', 'race/ethnic group')
df.agg$value <- factor(df.agg$value, levels=c('athletic ability', 'athletic team', 'church group', 'religious values',
'fraternal group', 'friends and family', 'music and art',
'musical or choir group', 'creativity', 'online community/club',
'sense of humor', 'race/ethnic group')
plota <- ggplot(df.agg[df.agg$group == 'no',], aes(x=factor(value), y=control.x, fill=stereotyped)) +
geom_bar(stat='identity', position=position_dodge()) +
coord_flip() +
scale_fill_manual(values=c('#144256', '#ABC3CE'), name="Identity") +
theme_bw() +
labs(title="Control") + ylab('Count') +
scale_y_continuous(breaks=seq(0,12, 2)) +
theme(legend.position='none',
plot.title=element_text(size=10, face='bold'),
axis.title.y=element_blank(),
axis.text.y=element_text(size=10),
axis.title.x=element_text(face='bold', size=12),
axis.text.x=element_text(size=10))
plota <- ggplot(df.agg[df.agg$group == 'no',], aes(x=factor(value), y=control.x, fill=stereotyped)) +
geom_bar(stat='identity', position=position_dodge()) +
coord_flip() +
scale_fill_manual(values=c('#144256', '#ABC3CE'), name="Identity") +
theme_bw() +
labs(title="Control") + ylab('Count') +
scale_y_continuous(breaks=seq(0,12, 2)) +
theme(legend.position='none',
plot.title=element_text(size=10, face='bold'),
axis.title.y=element_blank(),
axis.text.y=element_text(size=10),
axis.title.x=element_text(face='bold', size=12),
axis.text.x=element_text(size=10))
plotb <- ggplot(df.agg[df.agg$group == 'no',], aes(x=factor(value), y=self.x, fill=stereotyped)) +
geom_bar(stat='identity', position=position_dodge()) +
coord_flip() +
scale_fill_manual(values=c('#144256', '#ABC3CE'), name="Identity") +
theme_bw() +
scale_y_continuous(breaks=seq(0,12, 2)) +
#scale_x_discrete('value', labels=(c('music and art', 'athletic ability', 'creativity', 'friends and family', 'religious values', 'sense of humor'))) +
labs(title = "Self Affirmation") +
theme(legend.position='none',
plot.title=element_text(size=10, face='bold'),
axis.title.y=element_blank(),
axis.text.y=element_text(size=10),
axis.title.x=element_text(face='bold', size=12),
axis.text.x=element_text(size=10))
plotc <- ggplot(df.agg[df.agg$group == 'yes',], aes(x=factor(value), y=group.x, fill=stereotyped)) +
geom_bar(stat='identity', position=position_dodge()) +
coord_flip() +
scale_fill_manual(values=c('#144256', '#ABC3CE'), name="Identity") +
theme_bw() +
xlab('Value') + scale_y_continuous(breaks=seq(0,12, 2)) +
labs(title = "Group Affirmation")+
theme(legend.text=element_text(size=10),
legend.title = element_text(size=10),
plot.title=element_text(size=10, face='bold'),
axis.title.y=element_blank(),
axis.text.y=element_text(size=10),
axis.title.x=element_text(face='bold', size=12),
axis.text.x=element_text(size=10))
plota
plotb
plotc
df.agg$value
df.agg$value
df.agg
df.agg
df.agg$value
levels(df.agg$value)
df.agg$value <- factor(df.agg$value, levels=c('athletic ability', 'athletic team', 'church group', 'religious values',
'fraternal group', 'friends and family', 'music and art',
'musical or choir group', 'creativity', 'online community/club',
'sense of humor', 'race/ethnic group')
)
df.agg$value
plota <- ggplot(df.agg[df.agg$group == 'no',], aes(x=factor(value), y=control.x, fill=stereotyped)) +
geom_bar(stat='identity', position=position_dodge()) +
coord_flip() +
scale_fill_manual(values=c('#144256', '#ABC3CE'), name="Identity") +
theme_bw() +
labs(title="Control") + ylab('Count') +
scale_y_continuous(breaks=seq(0,12, 2)) +
theme(legend.position='none',
plot.title=element_text(size=10, face='bold'),
axis.title.y=element_blank(),
axis.text.y=element_text(size=10),
axis.title.x=element_text(face='bold', size=12),
axis.text.x=element_text(size=10))
plotb <- ggplot(df.agg[df.agg$group == 'no',], aes(x=factor(value), y=self.x, fill=stereotyped)) +
geom_bar(stat='identity', position=position_dodge()) +
coord_flip() +
scale_fill_manual(values=c('#144256', '#ABC3CE'), name="Identity") +
theme_bw() +
scale_y_continuous(breaks=seq(0,12, 2)) +
#scale_x_discrete('value', labels=(c('music and art', 'athletic ability', 'creativity', 'friends and family', 'religious values', 'sense of humor'))) +
labs(title = "Self Affirmation") +
theme(legend.position='none',
plot.title=element_text(size=10, face='bold'),
axis.title.y=element_blank(),
axis.text.y=element_text(size=10),
axis.title.x=element_text(face='bold', size=12),
axis.text.x=element_text(size=10))
plotc <- ggplot(df.agg[df.agg$group == 'yes',], aes(x=factor(value), y=group.x, fill=stereotyped)) +
geom_bar(stat='identity', position=position_dodge()) +
coord_flip() +
scale_fill_manual(values=c('#144256', '#ABC3CE'), name="Identity") +
theme_bw() +
xlab('Value') + scale_y_continuous(breaks=seq(0,12, 2)) +
labs(title = "Group Affirmation")+
theme(legend.text=element_text(size=10),
legend.title = element_text(size=10),
plot.title=element_text(size=10, face='bold'),
axis.title.y=element_blank(),
axis.text.y=element_text(size=10),
axis.title.x=element_text(face='bold', size=12),
axis.text.x=element_text(size=10))
plota
plotb
plotc
layOut(list(plota, 1, 1:3),
list(plotb, 1, 4:5),
list(plotc, 2, 1:5))
plotb <- ggplot(df.agg[df.agg$group == 'no',], aes(x=factor(value), y=self.x, fill=stereotyped)) +
geom_bar(stat='identity', position=position_dodge()) +
coord_flip() +
scale_fill_manual(values=c('#144256', '#ABC3CE'), name="Identity") +
theme_bw() +
scale_y_continuous(breaks=seq(0,12, 2)) +
labs(title = "Self Affirmation") + ylab('Count') +
theme(legend.position='none',
plot.title=element_text(size=10, face='bold'),
axis.title.y=element_blank(),
axis.text.y=element_text(size=10),
axis.title.x=element_text(face='bold', size=12),
axis.text.x=element_text(size=10))
layOut(list(plota, 1, 1:3),
list(plotb, 1, 4:5),
list(plotc, 2, 1:5))
?layOut
11+12
11/23
?chi.sq
?chisq.test
head(df)
names(df)
str(df$value)
df$value <- factor(df$value)
str(df$value)
levels(df$value)
chisq.test(df$value, df$stereotyped)
table(df$value, df$stereotyped)
table(df$value[df$interventcond == 'group', ], df$stereotyped[df$interventcond == 'group', ])
df$interventcond[1:5]
table(df$interventcond=='group')
table(df$value[df$interventcond=='group',])
table(df[df$interventcond=='group',df$value])
with(df[df$interventcond=='group'], table(df$value))
table(df$value[which(df$interventcond=='group'),])
table(df$interventcond)
table(df$value)
df[df$interventcond=='group', df$value]
df[which(df$interventcond=='group'), 263]
df[which(df$interventcond=='group'), 'value']
table(df[which(df$interventcond=='group'), 'value'], df[which(df$interventcond=='group'), 'stereotyped'])
chisq.test(table(df[which(df$interventcond=='group'), 'value'], df[which(df$interventcond=='group'), 'stereotyped']))
chisq.test(df$value, df$stereotyped)
table(df[which(df$interventcond=='group'), 'value'], df[which(df$interventcond=='group'), 'stereotyped'])
names(df)
head(df$test1numCorrectofAnswer)
?melt
df.melt <- melt(df, id.vars = c('subjectnum', 'interventcond', 'stereotyped'), measure.vars=c('test1numCorrectofAnswer', 'test2numCorrectofAnswer', 'test3numCorrectofAnswer'))
library(reshape2)
df.melt <- melt(df, id.vars = c('subjectnum', 'interventcond', 'stereotyped'), measure.vars=c('test1numCorrectofAnswer', 'test2numCorrectofAnswer', 'test3numCorrectofAnswer'))
head(df.melt)
df.melt$variable <- gsub(df.melt$variable, 'numCorrectofAnswer', '')
df.melt$variable <- gsub(df.melt$variable, 'numCorrectofAnswer', '')
df.melt
df.melt$variable <- gsub('numCorrectofAnswer', '', df.melt$variable)
head(df.melt)
df.melt <- melt(df, id.vars = c('subjectnum', 'interventcond', 'stereotyped'), measure.vars=c('test1numCorrectofAnswer', 'test2numCorrectofAnswer', 'test3numCorrectofAnswer'))
?grep
levels(df.melt$variable)
df.melt$variable <- factor(df.melt$variable, levels=c('test1', 'test2', 'test3'))
levels(df.melt$variable)
hist(df.melt$value)
plot<-ggplot(df.melt, aes(x=variable, y=value, aes=interventcond))
plot+geom_line()+
facet_wrap(~stereotyped)
df.melt <- melt(df, id.vars = c('subjectnum', 'interventcond', 'stereotyped'), measure.vars=c('test1numCorrectofAnswer', 'test2numCorrectofAnswer', 'test3numCorrectofAnswer'))
df.melt$variable <- factor(df.melt$variable, levels=c('test1', 'test2', 'test3'))
plot<-ggplot(df.melt, aes(x=variable, y=value, aes=interventcond))
plot+geom_line()+
facet_wrap(~stereotyped)
df.melt$variable
df.melt <- melt(df, id.vars = c('subjectnum', 'interventcond', 'stereotyped'), measure.vars=c('test1numCorrectofAnswer', 'test2numCorrectofAnswer', 'test3numCorrectofAnswer'))
head(df.melt)
df.melt$variable <- factor(df.melt$variable, levels=c('test1', 'test2', 'test3'))
head(df.melt)
df.melt <- melt(df, id.vars = c('subjectnum', 'interventcond', 'stereotyped'), measure.vars=c('test1numCorrectofAnswer', 'test2numCorrectofAnswer', 'test3numCorrectofAnswer'))
str(df.melt$variable)
df.melt$variable <- factor(df.melt$variable, levels=c('test1', 'test2', 'test3'))
str(df.melt$variable)
df.melt$variable <- factor(df.melt$variable)
df.melt <- melt(df, id.vars = c('subjectnum', 'interventcond', 'stereotyped'), measure.vars=c('test1numCorrectofAnswer', 'test2numCorrectofAnswer', 'test3numCorrectofAnswer'))
df.melt$variable <- factor(df.melt$variable)
str(df.melt$variable)
levels(df.melt$variable) <- c('test1', 'test2', 'test3')
str(df.melt$variable)
plot<-ggplot(df.melt, aes(x=variable, y=value, aes=interventcond))
plot+geom_line()+
facet_wrap(~stereotyped)
plot<-ggplot(df.melt, aes(x=variable, y=value, group=interventcond))
plot+geom_line()+
facet_wrap(~stereotyped)
plot<-ggplot(df.melt, aes(x=variable, y=value, group=interventcond))
plot+stat_smooth(method='glm')+
facet_wrap(~stereotyped)
plot<-ggplot(df.melt, aes(x=variable, y=value, group=interventcond, color=interventcond))
plot+stat_smooth(method='glm')+
facet_wrap(~stereotyped)
plot<-ggplot(!is.na(df.melt), aes(x=variable, y=value, group=interventcond, color=interventcond))
plot+stat_smooth(method='glm')+
plot<-ggplot(df.melt[which(df$interventcond != NA),], aes(x=variable, y=value, group=interventcond, color=interventcond))
plot<-ggplot(df.melt[which(df.melt$stereotyped != NA),], aes(x=variable, y=value, group=interventcond, color=interventcond))
plot+stat_smooth(method='glm')+
facet_wrap(~stereotyped)
plot<-ggplot(subset(df.melt$stereotyped != NA), aes(x=variable, y=value, group=interventcond, color=interventcond))
plot<-ggplot(subset(df.melt, df.melt$stereotyped != NA), aes(x=variable, y=value, group=interventcond, color=interventcond))
plot+stat_smooth(method='glm')+
facet_wrap(~stereotyped)
plot<-ggplot(subset(df.melt, df.melt$stereotyped == NA), aes(x=variable, y=value, group=interventcond, color=interventcond))
plot+stat_smooth(method='glm')+
facet_wrap(~stereotyped)
plot<-ggplotna.omit(df.melt), aes(x=variable, y=value, group=interventcond, color=interventcond))
plot<-ggplot(na.omit(df.melt), aes(x=variable, y=value, group=interventcond, color=interventcond))
plot+stat_smooth(method='glm')+
facet_wrap(~stereotyped)
?update
?lmer
library(lme4)
?lmer
head(df.melt$variable-1)
head(df.melt)
fm1 <- lmer(value ~ variable + (variable | subjectnum))
fm1 <- lmer(value ~ variable + (variable | subjectnum), df.melt)
table(subjectnum)
table(df.meltsubjectnum)
table(df.melt$subjectnum)
table#df.melt$variable
table(df.melt$variable)
table(df.melt$stereotyped)
fm1 <- lmer(value ~ variable + (variable | factor(subjectnum)), df.melt)
df.melt$subjectnum <- factor(df.melt$subjectnum)
fm1 <- lmer(value ~ variable + (variable | subjectnum), df.melt)
str(df.melt$subjectnum)
fm1 <- lmer(value ~ variable + (1 | subjectnum), df.melt)
head(df.melt)
fm2 <- update(fm1 .~. + interventcond)
fm2 <- update(fm1, .~. + interventcond)
fm3 <- update(fm2, .~. + stereotyped)
anova(fm1, fm2)
anova(fm1, fm3)
anova(fm2, fm3)
anova(fm1, fm3)
fm4 <- update(fm3, .~variable*interventcond*stereotyped)
fm4 <- update(fm3, .~variable*interventcond*stereotyped + (1 | subjectnum))
anova(fm3, fm4)
fm5 <- lm(value ~ variable + interventcond + stereotyped, data=df.melt)
fm5
summary(fm5)
fm5
names(fm5)
fm5$contrasts
fm5$effects
summary(fm5)
df.melt$testnum <- as.numeric(df.melt$variable)
table(df.melt$testnum, df.melt$variable)
df.melt$subjectnum <- factor(df.melt$subjectnum)-1
df.melt$testnum <- as.numeric(df.melt$variable)-1
table(df.melt$testnum, df.melt$variable)
df.melt$testnum <- as.numeric(df.melt$variable)
fm5 <- lm(value ~ testnum + interventcond + stereotyped, data=df.melt)
fm5
summary(fm5)
fm1 <- lmer(value ~ testnum +  (testnum | subjectnum), df.melt)
df.melt$subjectnum <- factor(df.melt$subjectnum)
fm1 <- lmer(value ~ testnum +  (testnum | subjectnum), df.melt)
fm1 <- lmer(value ~ testnum +  (testnum | subjectnum), df.melt)
df.melt$subjectnum <- factor(df.melt$subjectnum)
fm1 <- lmer(value ~ testnum +  (testnum | subjectnum), df.melt)
fm1 <- lmer(value ~ testnum + (testnum | subjectnum), df.melt)
fm1 <- lmer(value ~ testnum + (testnum|subjectnum), df.melt)
fm5 <- lm(value ~ testnum + interventcond + stereotyped, data=df.melt)
fm5
summary(fm5)
fm1 <- lmer(value ~ testnum-1 + (testnum-1|subjectnum), df.melt)
fm1 <- lmer(value ~ testnum + (1|subjectnum), df.melt)
df.melt$subjectnum <- factor(df.melt$subjectnum)
fm1 <- lmer(value ~ testnum + (1|subjectnum), df.melt)
str(subjectnum)
str(df.melt$subjectnum)
df.melt <- melt(df, id.vars = c('subjectnum', 'interventcond', 'stereotyped'), measure.vars=c('test1numCorrectofAnswer', 'test2numCorrectofAnswer', 'test3numCorrectofAnswer'))
levels(df.melt$variable) <- c('test1', 'test2', 'test3')
df.melt$testnum <- as.numeric(df.melt$variable)
df.melt$subjectnum <- factor(df.melt$subjectnum)
fm1 <- lmer(value ~ testnum + (testnum|subjectnum), df.melt)
fm1
plot<-ggplot(na.omit(df.melt), aes(x=variable, y=value, group=subjectnum, color=subjectnum))
plot+geom_line()+
facet_wrap(~stereotyped)
plot<-ggplot(na.omit(df.melt), aes(x=variable, y=value, group=subjectnum, color=interventcond))
plot+geom_line()+
facet_wrap(~stereotyped)
plot<-ggplot(na.omit(df.melt), aes(x=variable, y=value, group=subjectnum))
plot+geom_line()+
facet_wrap(interventcond~stereotyped)
plot<-ggplot(na.omit(df.melt), aes(x=variable, y=value, group=subjectnum))
plot+geom_line()+
facet_grid(interventcond~stereotyped)
fullmodel <- lmer(value ~ testnum*steretyped*interventcond + (testnum|subjectnum), df.melt)
fullmodel <- lmer(value ~ testnum*stereotyped*interventcond + (testnum|subjectnum), df.melt)
fm2 <- update(fmullmodel, .~ testnum*stereotyped + testnum*interventcond + (testnum|subjectnum), df.melt)
fm2 <- update(fullmodel, .~ testnum*stereotyped + testnum*interventcond + (testnum|subjectnum), df.melt)
anova(fullmodel, fm2)
fm4 <- update(fullmodel, .~ testnum + stereotyped + interventcond (testnum | subjectnum), df.melt)
fm4 <- update(fullmodel, .~ testnum + stereotyped + interventcond + (testnum | subjectnum), df.melt)
anova(fullmodel, fm4)
plot(fullmodel)
plot(fm2)
plot(fm3)
plot(fm4)
plot(fm5)
fm4 <- update(fullmodel, .~ testnum + stereotyped + interventcond + (testnum | subjectnum), df.melt)
plot(fm4)
plot(fullmodel)
fullmodel
summary(fullmodel)
MCMCglmm(fullmodel)
mcmcsamp(fullmodel)
library(mcmcglmm)
library('mcmcglmm')
library('MCMCglmm')
install.packages('MCMCglmm')
?MCMCglmm
library(MCMCglmm)
MCMCglmm(fullmodel)
lme4
?lme4
version(lme4)
version()
r.version()
bootmer(fullmodel)
bootMer(fullmodel)
fun <- function(fit){return(fixef(fit))}
bootMer(fullmodel, fun)
help("simulate-mer")
?simulate-mer
?simulatemer
a<-bootMer(fullmodel, fun, sim=1000)
a<-bootMer(fullmodel, fun, nsim = 1000)
summary(a)
names(a)
a[1]
a[2]
summary(a[2])
hist(a[2])
hist(a[2]$t)
hist(a[3])
summary(a[3])
library(shiny)
inputPanel(
sliderInput('games', label="Minimum Number of Games Played:",
min=1, max=162, value=150, step=1),
mainPanel(
htmlOutput('plot')
)
)
library(plotly)
shinyServer(function(input, output) {
output$plot <- renderUI({
df <- df[df$G>input$games,]
p <- ggplot(df[df$G>input$games,], aes(x=R)) +
geom_histogram(binwidth=1, fill="#144256") +
ylab('Count') + xlab('Runs') +
theme_bw()
py <- plotly(triddle, lsjrbob3nl, 'https://plot.ly')
res <- py$ggplotly(p, kwargs=list(filename='Runs',
fileopt='overwrite',
auto_open=F))
})
})
renderPlot({
p<-ggplot(df[df$G>input$games,], aes(x=R)) +
geom_histogram(binwidth=1, fill="#144256") +
ylab('Count') + xlab('Runs') +
theme_bw()
print(p)
})
inputPanel(
sliderInput('games', label="Minimum Number of Games Played:",
min=1, max=162, value=150, step=1),
mainPanel(
htmlOutput('plot')
)
)
shinyServer(function(input, output) {
output$plot <- renderUI({
df <- df[df$G>input$games,]
p <- ggplot(df[df$G>input$games,], aes(x=R)) +
geom_histogram(binwidth=1, fill="#144256") +
ylab('Count') + xlab('Runs') +
theme_bw()
py <- plotly(triddle, lsjrbob3nl, 'https://plot.ly')
res <- py$ggplotly(p, kwargs=list(filename='Runs',
fileopt='overwrite',
auto_open=F))
})
})
renderPlot({
p<-ggplot(df[df$G>input$games,], aes(x=R)) +
geom_histogram(binwidth=1, fill="#144256") +
ylab('Count') + xlab('Runs') +
theme_bw()
print(p)
})
inputPanel(
sliderInput('games', label="Minimum Number of Games Played:",
min=1, max=162, value=150, step=1)
)
inputPanel(
sliderInput('games', label="Minimum Number of Games Played:",
min=1, max=162, value=150, step=1)
)
renderPlot({
p<-ggplot(df[df$G>input$games,], aes(x=R)) +
geom_histogram(binwidth=1, fill="#144256") +
ylab('Count') + xlab('Runs') +
theme_bw()
print(p)
})
shinyServer(function(input, output) {
output$plot <- renderUI({
df <- df[df$G>input$games,]
p <- ggplot(df[df$G>input$games,], aes(x=R)) +
geom_histogram(binwidth=1, fill="#144256") +
ylab('Count') + xlab('Runs') +
theme_bw()
py <- plotly(triddle, lsjrbob3nl, 'https://plot.ly')
res <- py$ggplotly(p, kwargs=list(filename='Runs',
fileopt='overwrite',
auto_open=F))
})
})
renderPlot({
p<-ggplot(df[df$G>input$games,], aes(x=R)) +
geom_histogram(binwidth=1, fill="#144256") +
ylab('Count') + xlab('Runs') +
theme_bw()
print(p)
})
setwd("~/Documents/Gits/Group-Affirmation")
df.2<-read.spss('../Data/Groupaffrirmation_7_20_09.sav', to.data.frame=T)
library(foreign)
df <- read.spss("../Data/Group Affirmation Chapter WORKING FILE-Mar29.sav", to.data.frame = T)
names(df)
df[,c(3, 5:7]
df[,c(3, 5:7)]
sorted <- df[,c(3, 5:7)]
sorted
?order
order(sorted)
head(sorted)
order(sorted$subjectnum)
order(sorted$subjectnum, decreasing = F)
sorted[order(sorted$subjectnum, decreasing = F), ]
sorted<-sorted[order(sorted$subjectnum, decreasing = F), ]
sorted
View(sorted)
write.csv(sorted, filename='sorted')
write.csv(sorted, file='sorted.csv')
levels(sorted$gender)
str(sorted$gender)
sorted$gender.num <- as.numeric(sorted$gender)
head(sorted)
sorted$gender.num <- sorted$gender.num-1
sorted
write.csv(sorted, file='sorted.csv')
setwd("~/Documents/Gits/StatsWorkshop")
setwd("~/Documents/Gits/StatsWorkshop")
?rename
