axis.text.y=element_blank(),
axis.title.x=element_text(face='bold', size=12),
axis.text.x=element_text(size=10))
plotc <- ggplot(df.agg[df.agg$group == 'yes',], aes(x=factor(value), y=group.x, fill=stereotyped)) +
geom_bar(stat='identity', position=position_dodge()) +
coord_flip() +
scale_fill_manual(values=c('#144256', '#ABC3CE'), name="Identity") +
theme_bw() +
scale_y_continuous(breaks=seq(0,12, 2)) +
labs(title = "Group Affirmation") + ylab('Count') +
theme(legend.text=element_text(size=10),
legend.title = element_text(size=10),
plot.title=element_text(size=10, face='bold'),
axis.title.y=element_blank(),
axis.text.y=element_text(size=10),
axis.title.x=element_text(face='bold', size=12),
axis.text.x=element_text(size=10))
layOut(list(plota, 1, 1:3),
list(plotb, 1, 4:5),
list(plotc, 2, 1:5))
names(df)
df$test1numCorrectofAnswer
df.2$test1numCorrectofAnswer
df$stereotyped
df.2$interventcond
df$interventcond
df$subjectnum
df.2$subjectnum
?order
?sort
?order
df[order(df$subjectnum), ]
ordered.df<-df[order(df$subjectnum), ]
df$subjectnum
ordered.df$subjectnum
df.2$subjectnum
ordered.df$interventcond
df.2$subj
df.2$interventcond
library(foreign)
df<-read.spss('../Data/Groupaffrirmation_7_20_09.sav', to.data.frame=T)
df.2 <- read.spss("../Data/Group Affirmation Chapter WORKING FILE-Mar29.sav", to.data.frame = T)
df$stereotyped <- factor(df$ethnicity, levels=c('Asian', 'Latino', 'Black', 'Native American', 'White', 'Other'), labels=c('Nonstereotyped', 'Stereotyped', 'Stereotyped', 'Nonstereotyped', 'Nonstereotyped', 'Nonstereotyped'))
df.2$stereotyped <- factor(df.2$ethnicity, levels=c('Asian', 'Latino', 'Black', 'Native American', 'White', 'Other'), labels=c('Nonstereotyped', 'Stereotyped', 'Stereotyped', 'Nonstereotyped', 'Nonstereotyped', 'Nonstereotyped'))
df$stereotyped <- droplevels(df$stereotyped)
df.2stereotyped <- droplevels(df.2$stereotyped)
levels(df$interventcond) <-  c('Self', 'Group', 'Control')
levels(df.2$interventcond) <-  c('Self', 'Group', 'Control')
df$interventcond <- factor(df$interventcond, levels = c('Control', 'Self', 'Group'))
df.2$interventcond <- factor(df.2$interventcond, levels=c('Control', 'Self', 'Group'))
library(ggplot2)
library(wq)
library(plyr)
value <- paste(df$contafftype, df$selfafftype, df$groupafftype, sep="")
df$value <- gsub('NA', '', value)
df$value[df$value == ' music and art'] <- 'music and art'
df.agg <- ddply(df, .var = c('value', 'stereotyped'), .fun=summarise,
valuecat = length(value),
self = sum(interventcond %in% 'self'),
control = sum(interventcond %in% 'control'),
group = sum(interventcond %in% 'group')
)
df.agg$value<-factor(df.agg$value)
df.agg <- df.agg[!is.na(df.agg$stereotyped) & !is.na(df.agg$value),]
df.agg2 <- expand.grid(value=levels(df.agg$value), stereotyped=levels(df.agg$stereotyped), valuecat=0, self=0, control=0, group=0)
df.agg <- merge(df.agg, df.agg2, by.x=c('value', 'stereotyped'), by.y=c('value', 'stereotyped'), all=T)
df.agg[is.na(df.agg)] <- 0
df.agg$group <- c(rep('no', 2), rep('yes', 4), rep('no', 2), rep('yes', 2), rep('no', 4), rep('yes', 6), rep('no', 4))
df.agg$value <- factor(df.agg$value, levels=c('athletic ability', 'athletic team', 'church group', 'religious values',
'fraternal group', 'friends and family', 'music and art',
'musical or choir group', 'creativity', 'online community/club',
'sense of humor', 'race/ethnic group'))
plota <- ggplot(df.agg[df.agg$group == 'no',], aes(x=factor(value), y=valuecat.x, fill=stereotyped)) +
geom_bar(stat='identity', position=position_dodge()) +
coord_flip() +
scale_fill_manual(values=c('#144256', '#ABC3CE'), name="Identity") +
theme_bw() +
labs(title="Control") + ylab('Count') +
scale_y_continuous(breaks=seq(0,12, 2)) +
theme(legend.position='none',
plot.title=element_text(size=10, face='bold'),
axis.title.y=element_blank(),
axis.text.y=element_text(size=10),
axis.title.x=element_text(face='bold', size=12),
axis.text.x=element_text(size=10))
plotb <- ggplot(df.agg[df.agg$group == 'no',], aes(x=factor(value), y=valuecat.x, fill=stereotyped)) +
geom_bar(stat='identity', position=position_dodge()) +
coord_flip() +
scale_fill_manual(values=c('#144256', '#ABC3CE'), name="Identity") +
theme_bw() +
scale_y_continuous(breaks=seq(0,12, 2)) +
labs(title = "Self Affirmation") + ylab('Count') +
theme(legend.position='none',
plot.title=element_text(size=10, face='bold'),
axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.title.x=element_text(face='bold', size=12),
axis.text.x=element_text(size=10))
plotc <- ggplot(df.agg[df.agg$group == 'yes',], aes(x=factor(value), y=valuecat.x, fill=stereotyped)) +
geom_bar(stat='identity', position=position_dodge()) +
coord_flip() +
scale_fill_manual(values=c('#144256', '#ABC3CE'), name="Identity") +
theme_bw() +
scale_y_continuous(breaks=seq(0,12, 2)) +
labs(title = "Group Affirmation") + ylab('Count') +
theme(legend.text=element_text(size=10),
legend.title = element_text(size=10),
plot.title=element_text(size=10, face='bold'),
axis.title.y=element_blank(),
axis.text.y=element_text(size=10),
axis.title.x=element_text(face='bold', size=12),
axis.text.x=element_text(size=10))
layOut(list(plota, 1, 1:3),
list(plotb, 1, 4:5),
list(plotc, 2, 1:5))
library(reshape2)
library(lme4)
df.melt <- melt(df, id.vars = c('subjectnum', 'interventcond', 'stereotyped'), measure.vars=c('test1numCorrectofAnswer', 'test2numCorrectofAnswer', 'test3numCorrectofAnswer'))
df.melt$variable
levels(df.melt$variable) <- c('test1', 'test2', 'test3')
df.melt$variable
df.melt$testnum <- as.numeric(df.melt$variable)
df.melt$testnum
df.melt$interventcond
levels(df.melt$interventcond) <-  c('Self', 'Group', 'Control')
df.melt$interventcond
fullmodel <- lmer(value ~ semester*stereotyped*interventcond +
(1+semester|subjectnum), df.melt, REML=F)
library(reshape2)
library(lme4)
df.melt <- melt(df, id.vars = c('subjectnum', 'interventcond', 'stereotyped'), measure.vars=c('Fall07GPA', 'Spring08GPA', 'Fall08GPA'))
?merge
df.2$Fall07GPA
names(df.2)
names(df)
df<-read.spss('../Data/Groupaffrirmation_7_20_09.sav', to.data.frame=T)
df.2 <- read.spss("../Data/Group Affirmation Chapter WORKING FILE-Mar29.sav", to.data.frame = T)
df <- read.spss("../Data/Group Affirmation Chapter WORKING FILE-Mar29.sav", to.data.frame = T)
df$interventcond
df <- read.spss("../Data/Group Affirmation Chapter WORKING FILE-Mar29.sav", to.data.frame = T)
df$stereotyped <- factor(df$ethnicity, levels=c('Asian', 'Latino', 'Black', 'Native American', 'White', 'Other'), labels=c('Nonstereotyped', 'Stereotyped', 'Stereotyped', 'Nonstereotyped', 'Nonstereotyped', 'Nonstereotyped'))
df$stereotyped <- droplevels(df$stereotyped)
levels(df$interventcond) <-  c('Self', 'Group', 'Control')
df$interventcond <- factor(df$interventcond, levels = c('Control', 'Self', 'Group'))
df.melt <- melt(df, id.vars = c('subjectnum', 'interventcond', 'stereotyped'), measure.vars=c('Fall07GPA', 'Spring08GPA', 'Fall08GPA'))
levels(df.melt$variable) <- c('Pre-Interv', 'Interv', 'Post-Interv')
df.melt$semester <- as.numeric(df.melt$variable)-1
df.melt$interventcond
plot<-ggplot(na.omit(df.melt), aes(x=variable, y=value, group=subjectnum))
plot+geom_line(color="#144256") +
theme_bw() + ylab("GPA") +
facet_grid(interventcond~stereotyped) +
theme(plot.title=element_text(size=10, face='bold'),
axis.title.x=element_blank(),
axis.text.x=element_text(size=10),
axis.title.y=element_text(face='bold', size=12),
axis.text.y=element_text(size=10))
fullmodel <- lmer(value ~ semester*stereotyped*interventcond +
(1+semester|subjectnum), df.melt, REML=F)
uncorrelated <- lmer(value ~ semester*stereotyped*interventcond +
(1|subjectnum) + (0+semester|subjectnum), df.melt,
REML=F)
comp1 <- anova(fullmodel, uncorrelated)
comp1
crossed <- lmer(value ~ semester*stereotyped*interventcond + (1|semester) +
(1|subjectnum), df.melt, REML=F)
comp2 <- anova(uncorrelated, crossed)
comp2
random.intercept <- lmer(value ~ semester*stereotyped*interventcond +
(1|subjectnum), df.melt, REML=F)
comp3 <- anova(uncorrelated, random.intercept)
comp3
uncorrelated <- lmer(value ~ semester*stereotyped*interventcond +
(1|subjectnum) + (0+semester|subjectnum), df.melt,
REML=F)
uncorrelated.me.sem <- lmer(value ~ semester+stereotyped*interventcond +
(1|subjectnum) + (0+semester|subjectnum), df.melt,
REML=F)
comp4 <- anova(uncorrelated, uncorrelated.me.sem)
comp4
uncorrelated.no.sem <- lmer(value ~ stereotyped*interventcond +
(1|subjectnum) + (0+semester|subjectnum), df.melt,
REML=F)
comp5 <- anova(uncorrelated.me.sem, uncorrelated.no.sem)
comp5
uncorrelated.two.way <- lmer(value ~ semester*stereotyped + semester*interventcond + stereotyped*interventcond +
(1|subjectnum) + (0+semester|subjectnum), df.melt,
REML=F)
comp6 <- anova(uncorrelated.me.sem, uncorrelated.two.way)
comp6
uncorrelated.no.sem
round(comp5$Chisq[2], 2)
comp5.a <- anova(uncorrelated.no.sem, uncorrelated)
comp5.a
comp6 <- anova(uncorrelated.no.sem, uncorrelated.two.way)
comp6
df.melt$interventcond
uncorrelated.no.sem <- lmer(value ~ stereotyped*interventcond +
(1|subjectnum) + (0+semester|subjectnum), df.melt)
eff <- fixef(uncorrelated.me.sem)
FUN <- function(fit) {
return(fixef(fit))
}
library(boot)
set.seed(42)
result.para <- bootMer(uncorrelated.me.sem, FUN, nsim=1000, use.u=F, type='parametric')
result.para
booted.lower <- rep(0, length(result.para$t0))
booted.upper <- rep(0, length(result.para$t0))
for (i in 1:length(result.para$t0)) {
a<-boot.ci(result.para, index=i, type='basic')
booted.lower[i] <- a$basic[4]
booted.upper[i] <- a$basic[5]
}
plot.dat <- data.frame(effect=names(eff), estimate=eff,
lower=booted.lower,
upper=booted.upper)
plot.dat$effect <- factor(plot.dat$effect, as.character(plot.dat$effect))
plot.dat$effect <- mapvalues(plot.dat$effect,
from=c('semester', 'stereotypedStereotyped', 'interventcondSelf',
'interventcondGroup',
'stereotypedStereotyped:interventcondSelf',
'stereotypedStereotyped:interventcondGroup'),
to=c('Semester', 'Stereotyped', 'Self Affirm', 'Group Affirm',
'Stereotyped*Self Affirm', 'Stereotyped*Group Affirm'))
coef<-ggplot(plot.dat[plot.dat$effect!='(Intercept)',], aes(x=effect, y=estimate))
coef + geom_point(size=4, color="#144256") +
geom_errorbar(aes(ymin=lower, ymax=upper), width=.1, color="#144256") +
coord_flip() +
theme_bw() +
geom_hline(aes(yintercept=0)) +
theme(plot.title=element_text(size=10, face='bold'),
axis.title.x=element_blank(),
axis.text.x=element_text(size=10),
axis.title.y=element_text(face='bold', size=12),
axis.text.y=element_text(size=10))
result.para <- bootMer(uncorrelated.no.sem, FUN, nsim=1000, use.u=F, type='parametric')
result.para
booted.lower <- rep(0, length(result.para$t0))
booted.upper <- rep(0, length(result.para$t0))
for (i in 1:length(result.para$t0)) {
a<-boot.ci(result.para, index=i, type='basic')
booted.lower[i] <- a$basic[4]
booted.upper[i] <- a$basic[5]
}
plot.dat <- data.frame(effect=names(eff), estimate=eff,
lower=booted.lower,
upper=booted.upper)
eff <- fixef(uncorrelated.no.sem)
plot.dat <- data.frame(effect=names(eff), estimate=eff,
lower=booted.lower,
upper=booted.upper)
plot.dat$effect <- factor(plot.dat$effect, as.character(plot.dat$effect))
plot.dat$effect <- mapvalues(plot.dat$effect,
from=c('stereotypedStereotyped', 'interventcondSelf',
'interventcondGroup',
'stereotypedStereotyped:interventcondSelf',
'stereotypedStereotyped:interventcondGroup'),
to=c('Stereotyped', 'Self Affirm', 'Group Affirm',
'Stereotyped*Self Affirm', 'Stereotyped*Group Affirm'))
coef<-ggplot(plot.dat[plot.dat$effect!='(Intercept)',], aes(x=effect, y=estimate))
coef + geom_point(size=4, color="#144256") +
geom_errorbar(aes(ymin=lower, ymax=upper), width=.1, color="#144256") +
coord_flip() +
theme_bw() +
geom_hline(aes(yintercept=0)) +
theme(plot.title=element_text(size=10, face='bold'),
axis.title.x=element_blank(),
axis.text.x=element_text(size=10),
axis.title.y=element_text(face='bold', size=12),
axis.text.y=element_text(size=10))
plot.dat$estimate[3]
plot.dat
df$interventcond
rsa <- lm(raceactsum ~ stereotyped*interventcond, data=df)
rsa
summary(rsa)
a.rsa <- aov(rsa)
a.rsa
summary(a.rsa)
plot.dat
plot <- ggplot(plot.dat, aes(x=stereotyped, y=raceactsum, color=interventcond, fill=interventcond))
plot + geom_point(position=position_jitterdodge(jitter.height = .2)) +
stat_summary(fun.y=mean, geom='point', size=5, position=position_dodge()) +
stat_summary(fun.data=mean_cl_boot, geom='errorbar', size=1.5, position=position_dodge()) +
theme_bw() +
scale_color_manual(values=c('#144256', '#88301B', '#88691B'), name="Condition") +
scale_fill_manual(values=c('#144256', '#88301B', '#88691B'), name="Condition")
plot.dat
plot.dat <- df[-7,]
plot.dat
plot <- ggplot(plot.dat, aes(x=stereotyped, y=raceactsum, color=interventcond, fill=interventcond))
plot + geom_point(position=position_jitterdodge(jitter.height = .2)) +
stat_summary(fun.y=mean, geom='point', size=5, position=position_dodge()) +
stat_summary(fun.data=mean_cl_boot, geom='errorbar', size=1.5, position=position_dodge()) +
theme_bw() +
scale_color_manual(values=c('#144256', '#88301B', '#88691B'), name="Condition") +
scale_fill_manual(values=c('#144256', '#88301B', '#88691B'), name="Condition")
plot <- ggplot(plot.dat, aes(x=interventcond, y=raceactsum, color=interventcond, fill=interventcond))
plot + geom_point(position=position_jitterdodge(jitter.height = .2)) +
stat_summary(fun.y=mean, geom='point', size=5, position=position_dodge()) +
stat_summary(fun.data=mean_cl_boot, geom='errorbar', size=1.5, position=position_dodge()) +
theme_bw() + facet_wrap(.~stereotyped)+
scale_color_manual(values=c('#144256', '#88301B', '#88691B'), name="Condition") +
scale_fill_manual(values=c('#144256', '#88301B', '#88691B'), name="Condition")
plot <- ggplot(plot.dat, aes(x=interventcond, y=raceactsum, color=interventcond, fill=interventcond))
plot + geom_point(position=position_jitterdodge(jitter.height = .2)) +
stat_summary(fun.y=mean, geom='point', size=5, position=position_dodge()) +
stat_summary(fun.data=mean_cl_boot, geom='errorbar', size=1.5, position=position_dodge()) +
theme_bw() + facet_wrap(~stereotyped)+
scale_color_manual(values=c('#144256', '#88301B', '#88691B'), name="Condition") +
scale_fill_manual(values=c('#144256', '#88301B', '#88691B'), name="Condition")
plot <- ggplot(plot.dat, aes(x=interventcond, y=raceactsum, color=interventcond))
plot + geom_point(position=position_jitter(jitter.height = .2)) +
stat_summary(fun.y=mean, geom='point', size=5, position=position_dodge()) +
stat_summary(fun.data=mean_cl_boot, geom='errorbar', size=1.5, position=position_dodge()) +
theme_bw() + facet_wrap(~stereotyped)+
scale_color_manual(values=c('#144256', '#88301B', '#88691B'), name="Condition") +
scale_fill_manual(values=c('#144256', '#88301B', '#88691B'), name="Condition") +
xlab('Condition') + ylab('Words Completed with Race/Stereotype Content')
plot <- ggplot(plot.dat, aes(x=interventcond, y=raceactsum, color=interventcond))
plot + geom_point(position=position_jitter(height = .2)) +
stat_summary(fun.y=mean, geom='point', size=5, position=position_dodge()) +
stat_summary(fun.data=mean_cl_boot, geom='errorbar', size=1.5, position=position_dodge()) +
theme_bw() + facet_wrap(~stereotyped)+
scale_color_manual(values=c('#144256', '#88301B', '#88691B'), name="Condition") +
scale_fill_manual(values=c('#144256', '#88301B', '#88691B'), name="Condition") +
xlab('Condition') + ylab('Words Completed with Race/Stereotype Content')
plot <- ggplot(plot.dat, aes(x=interventcond, y=raceactsum, color=interventcond))
plot + geom_point(position=position_jitter(height = .2, width=.2)) +
stat_summary(fun.y=mean, geom='point', size=5, position=position_dodge()) +
stat_summary(fun.data=mean_cl_boot, geom='errorbar', size=1.5, position=position_dodge()) +
theme_bw() + facet_wrap(~stereotyped)+
scale_color_manual(values=c('#144256', '#88301B', '#88691B'), name="Condition") +
scale_fill_manual(values=c('#144256', '#88301B', '#88691B'), name="Condition") +
xlab('Condition') + ylab('Words Completed with Race/Stereotype Content')
table(df$stereotyped, df$interventcond)
srp <- read.csv('Data/SR.Past.Rel.12.10.14.csv')
#### EXCLUSIONS ####
#exclude 5 who copied the Michael text verbatim (exclcopied=1)
srp <- srp[ which(is.na(srp$exclcopied) == TRUE ), ]
#exclude 11 who used 'Michael' in their message (didn't follow directions) (exclmich=1)
srp <- srp[ which(is.na(srp$exclmich) == TRUE ), ]
####### COMPUTING VARIABLES ##########
attach(srp)
## rmq
srp$loc <- (rmq_1 + rmq_3 + rmq_4 + rmq_5 + rmq_8 + rmq_16 + rmq_21 + rmq_25 + rmq_28 + rmq_29 + (7-rmq_13) + (7-rmq_24))/12
srp$ass <- ((7-rmq_2) + rmq_6 + rmq_7 + rmq_9 + (7-rmq_10) + rmq_11 + rmq_15 + rmq_19 + rmq_20 + rmq_22 + (7-rmq_27) + rmq_30)/12
srp$locomassess = srp$loc-srp$ass
srp$prom = (6-rfq_1) + rfq_3 + rfq_7 + (6-rfq_9) + rfq_10 + (6-rfq_11)
srp$prev = (6-rfq_2) + (6-rfq_4) + rfq_5 + (6-rfq_6) + (6-rfq_8)
srp$prommprev = srp$prom-srp$prev
# closeness measure
srp$closeness <- (((8-close_1) + (8-close_2) + close_3 + close_4 + (8-close_5) + (8-close_6) + close_7 + close_8)/8)
# ntoBelong
srp$belong = ((6-NTB_1) + (6-NTB_3) + (6-NTB_7) + NTB_2 + NTB_4 + NTB_5 + NTB_6 + NTB_8 + NTB_9 + NTB_10)/10
# Relational Trust
srp$reltrust = (reltrust_1 + reltrust_2 + reltrust_3 + reltrust_4)/4
# Epistemic Trust
srp$epistrust = (epistrust_1 + epistrust_2 + epistrust_3 + epistrust_4)/4
# message trust
srp$messtrust = (messtrust_1 + messtrust_2 + messtrust_3 + messtrust_4)/4
# ECR
srp$anx = (ECR.S_2 + ECR.S_4 + ECR.S_6 + (8-ECR.S_8) + ECR.S_10 + ECR.S_12)
srp$avoid = ((8-ECR.S_1) + ECR.S_3 + (8-ECR.S_5) + ECR.S_7 + ECR.S_9 + ECR.S_11)
#SCS
srp$independence = (((8-SCS_1) + (8-SCS_2) + (8-SCS_3) + (8-SCS_4) + (8-SCS_5) + (8-SCS_6) + (8-SCS_7) + (8-SCS_8) + (8-SCS_9) + (8-SCS_10) + (8-SCS_11)+ (8-SCS_12)+ SCS_13+ SCS_14+ SCS_15+ SCS_16+ SCS_17+ SCS_18+ SCS_19+ SCS_20+ SCS_21+ SCS_22+ SCS_23+ SCS_24)/24)
detach(srp)
#F-Scale
srp$authority = (((srp$F.Scale_1) + (srp$F.Scale_2) + (srp$F.Scale_3) + (srp$F.Scale_4) + (srp$F.Scale_5) + (srp$F.Scale_6) + (srp$F.Scale_7) +
(srp$F.Scale_8) + (srp$F.Scale_9) + (srp$F.Scale_10) + (srp$F.Scale_11)+ (srp$F.Scale_12)+ srp$F.Scale_13+ srp$F.Scale_14 +
srp$F.Scale_15+ srp$F.Scale_16+ srp$F.Scale_17+ srp$F.Scale_18+ srp$F.Scale_19+ srp$F.Scale_20+ srp$F.Scale_21+ srp$F.Scale_22)/22)
#### RECODING ####
####renaming manipulations
#install.packages("reshape")
library(reshape)
library(reshape)
srp <- rename(srp, c(DO.BR.FL_19="relprime")) #dissolved=1, stable=2
srp <- rename(srp, c(DO.BR.FL_20="attitude")) #like=2, dislike=1
setwd("~/Documents/gits/StatsWorkshop")
srp <- read.csv('Data/SR.Past.Rel.12.10.14.csv')
#### EXCLUSIONS ####
#exclude 5 who copied the Michael text verbatim (exclcopied=1)
srp <- srp[ which(is.na(srp$exclcopied) == TRUE ), ]
#exclude 11 who used 'Michael' in their message (didn't follow directions) (exclmich=1)
srp <- srp[ which(is.na(srp$exclmich) == TRUE ), ]
####### COMPUTING VARIABLES ##########
attach(srp)
## rmq
srp$loc <- (rmq_1 + rmq_3 + rmq_4 + rmq_5 + rmq_8 + rmq_16 + rmq_21 + rmq_25 + rmq_28 + rmq_29 + (7-rmq_13) + (7-rmq_24))/12
srp$ass <- ((7-rmq_2) + rmq_6 + rmq_7 + rmq_9 + (7-rmq_10) + rmq_11 + rmq_15 + rmq_19 + rmq_20 + rmq_22 + (7-rmq_27) + rmq_30)/12
srp$locomassess = srp$loc-srp$ass
srp$prom = (6-rfq_1) + rfq_3 + rfq_7 + (6-rfq_9) + rfq_10 + (6-rfq_11)
srp$prev = (6-rfq_2) + (6-rfq_4) + rfq_5 + (6-rfq_6) + (6-rfq_8)
srp$prommprev = srp$prom-srp$prev
# closeness measure
srp$closeness <- (((8-close_1) + (8-close_2) + close_3 + close_4 + (8-close_5) + (8-close_6) + close_7 + close_8)/8)
# ntoBelong
srp$belong = ((6-NTB_1) + (6-NTB_3) + (6-NTB_7) + NTB_2 + NTB_4 + NTB_5 + NTB_6 + NTB_8 + NTB_9 + NTB_10)/10
# Relational Trust
srp$reltrust = (reltrust_1 + reltrust_2 + reltrust_3 + reltrust_4)/4
# Epistemic Trust
srp$epistrust = (epistrust_1 + epistrust_2 + epistrust_3 + epistrust_4)/4
# message trust
srp$messtrust = (messtrust_1 + messtrust_2 + messtrust_3 + messtrust_4)/4
# ECR
srp$anx = (ECR.S_2 + ECR.S_4 + ECR.S_6 + (8-ECR.S_8) + ECR.S_10 + ECR.S_12)
srp$avoid = ((8-ECR.S_1) + ECR.S_3 + (8-ECR.S_5) + ECR.S_7 + ECR.S_9 + ECR.S_11)
#SCS
srp$independence = (((8-SCS_1) + (8-SCS_2) + (8-SCS_3) + (8-SCS_4) + (8-SCS_5) + (8-SCS_6) + (8-SCS_7) + (8-SCS_8) + (8-SCS_9) + (8-SCS_10) + (8-SCS_11)+ (8-SCS_12)+ SCS_13+ SCS_14+ SCS_15+ SCS_16+ SCS_17+ SCS_18+ SCS_19+ SCS_20+ SCS_21+ SCS_22+ SCS_23+ SCS_24)/24)
detach(srp)
#F-Scale
srp$authority = (((srp$F.Scale_1) + (srp$F.Scale_2) + (srp$F.Scale_3) + (srp$F.Scale_4) + (srp$F.Scale_5) + (srp$F.Scale_6) + (srp$F.Scale_7) +
(srp$F.Scale_8) + (srp$F.Scale_9) + (srp$F.Scale_10) + (srp$F.Scale_11)+ (srp$F.Scale_12)+ srp$F.Scale_13+ srp$F.Scale_14 +
srp$F.Scale_15+ srp$F.Scale_16+ srp$F.Scale_17+ srp$F.Scale_18+ srp$F.Scale_19+ srp$F.Scale_20+ srp$F.Scale_21+ srp$F.Scale_22)/22)
#### RECODING ####
####renaming manipulations
#install.packages("reshape")
library(reshape)
library(reshape)
srp <- rename(srp, c(DO.BR.FL_19="relprime")) #dissolved=1, stable=2
srp <- rename(srp, c(DO.BR.FL_20="attitude")) #like=2, dislike=1
install.packages('reshape')
# dummy coding manipulations
srp$relprimedum[srp$relprime == "Stable Relationship Priming"] <- 0
srp$relprimedum[srp$relprime == "Dissolved Relationship Priming"] <- 1
srp$attitudedum[srp$attitude == "Michael-Dislike"] <- 0
srp$attitudedum[srp$attitude == "Michael-Like"] <- 1
###### SUBSETTING ####
srlike <- subset(srp, attitudedum==1)
srdislike <- subset(srp, attitudedum==0)
srstable <- subset(srp, relprimedum==0)
srdissolve <- subset(srp, relprimedum==1)
library(ggplot2)
theme_set(theme_bw(base_size = 14)) #for all graphs to have bw background & same font size
ggplot(srlike, aes(x=vmessage)) +
geom_density()
ggplot(srdislike, aes(x=vmessage)) +
geom_density()
ggplot(srstable, aes(x=vmessage)) +
geom_density()
ggplot(srdissolve, aes(x=vmessage)) +
geom_density()
ggplot(srlike, aes(x=vrecall)) +
geom_density()
ggplot(srdislike, aes(x=vrecall)) +
geom_density()
ggplot(srstable, aes(x=vrecall)) +
geom_density()
ggplot(srdissolve, aes(x=vrecall)) +
geom_density()
plot <- ggplot(srp, aes(x=vmessage, color=relprime))
plot + geom_density()
plot <- ggplot(srp, aes(x=vrecall, color=relprime))
plot + geom_density()
plot <- ggplot(srp, aes(x=vmessage, color=attitude))
plot + geom_density()
plot <- ggplot(srp, aes(x=vmessage, color=attitude))
plot + geom_density()
plot <- ggplot(srp, aes(x=vrecall, color=attitude))
plot + geom_density()
plot <- ggplot(srp, aes(x=vrecall, color=attitude))
plot + geom_density() + facet_wrap(~relprime)
plot <- ggplot(srp, aes(x=vmessage, color=attitude))
plot + geom_density() + facet_wrap(~relprime)
table(srp$vmessage, srp$attitude, srp$relprime)
plot <- ggplot(srp, aes(x=vmessage, y=vrecall))
plot + geom_point(position=position_jitter())
plot <- ggplot(srp, aes(x=vmessage, y=vrecall))
plot + geom_point(position=position_jitter()) + facet_grid(attitude~relprime)
sr.att.mess <- aov(vmessage ~ attitudedum, data=srp)
sr.att.mess
summary(sr.att.mess) #main effect of attitude
sr.att.rec <- aov(vrecall ~ attitudedum, data=srp)
summary(sr.att.rec) #main effect of attitude
sr.rel.mess <- aov(vmessage ~ relprimedum, data=srp)
summary(sr.rel.mess) #ns
sr.rel.rec <- aov(vrecall ~ relprimedum, data=srp)
summary(sr.rel.rec) #ns
sr.rel.att.mess <- aov(vmessage ~ attitudedum * relprimedum, data=srp)
summary(sr.rel.att.mess) #main effect of attitude (interaction ns)
sr.rel.att.mess
?aov
table(srp$attitudeum, srp$relprimedum)
table(srp$attitudedum, srp$relprimedum)
plot <- ggplot(srp, aes(x=vmessage, color=relprime))
plot + geom_density()
sr.att.mess <- aov(vmessage ~ attitudedum, data=srp)
sr.att.mess.1 <- aov(vmessage ~ attitudedum, data=srp)
sr.att.mess
sr.att.mess.1
table(srp$attitudedum, srp$relprimedum)
cor(srp$attitudedum, srp$relprimedum)
srp$attitudedum
srp$relprimedum
cor(srp$attitude, srp$relprime)
cor(as.numeric(srp$attitude), as.numeric(srp$relprime))
srp$attitude
srp$subj
temp <- data.frame(subj=srp$subj, attitude=as.numeric(srp$attitude), prime=as.numeric(srp$relprime))
head(temp)
round(cor(as.numeric(srp$attitude), as.numeric(srp$relprime)), 5)
sr.att.mess <- aov(vmessage ~ attitudedum, data=srp)
summary(sr.att.mess) #main effect of attitude
sr.rel.att.mess <- aov(vmessage ~ attitudedum * relprimedum, data=srp)
summary(sr.rel.att.mess) #main effect of attitude (interaction ns)
sr.rel.att.mess <- aov(vmessage ~ relprimedum * attitudedum, data=srp)
summary(sr.rel.att.mess) #main effect of attitude (interaction ns)
sr.rel.att.mess <- aov(vmessage ~ attitudedum * relprimedum, data=srp)
summary(sr.rel.att.mess) #main effect of attitude (interaction ns)
sr.rel.att.mess <- aov(vmessage ~ relprimedum*attitudedum, data=srp)
summary(sr.rel.att.mess) #main effect of attitude (interaction ns)
